from sqlalchemy import create_engine, Column, Integer, String, ForeignKey
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import relationship, sessionmaker

# Criando a engine para o banco de dados SQLite (pode ser substituído por outro SGBD, como PostgreSQL ou MySQL)
engine = create_engine('sqlite:///banco.db')

# Base declarativa
Base = declarative_base()

# Definindo a tabela Cliente
class Cliente(Base):
    __tablename__ = 'clientes'
    id = Column(Integer, primary_key=True)
    nome = Column(String)
    cpf = Column(String(11), nullable=False)
    endereco = Column(String)

    # Relacionamento um-para-muitos com a tabela Conta
    contas = relationship('Conta', back_populates='cliente')


# Definindo a tabela Conta
class Conta(Base):
    __tablename__ = 'contas'
    id = Column(Integer, primary_key=True)
    tipo = Column(String)
    agencia = Column(Integer)
    num = Column(Integer)
    cliente_id = Column(Integer, ForeignKey('clientes.id'))
    saldo = Column(float)

    # Relacionamento muitos-para-um com a tabela Cliente
    cliente = relationship('Cliente', back_populates='contas')

# Criando as tabelas no banco de dados
Base.metadata.create_all(engine)

# Criando uma sessão
Session = sessionmaker(bind=engine)
session = Session()

# Adicionando dados de exemplo
cliente1 = Cliente(nome='João Silva', cpf='12345678912', endereco='Rua A, 123')
conta1 = Conta(tipo='Corrente',agenca='1234', num='12345', saldo=1000, cliente=cliente1)
conta2 = Conta(tipo='Poupança',agenca='1234', num='54321', saldo=2000, cliente=cliente1)

session.add(cliente1)
session.add(conta1)
session.add(conta2)
session.commit()

# Consultando os dados
clientes = session.query(Cliente).all()
for cliente in clientes:
    print(f'Cliente: {cliente.nome}, Endereço: {cliente.endereco}')
    for conta in cliente.contas:
        print(f'  Conta {conta.tipo}, Saldo: {conta.saldo}')
